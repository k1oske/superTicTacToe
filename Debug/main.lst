SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Sep-2024 16:59:07  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\Nutzer\OneDrive\Dokumente\GitHub\superTicTacToe\main.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          main.c     1    /*****************************************************************/
          main.c     2    /*                                                               */
          main.c     3    /*   CASIO fx-9860G SDK Library                                  */
          main.c     4    /*                                                               */
          main.c     5    /*   File name : [ProjectName].c                                 */
          main.c     6    /*                                                               */
          main.c     7    /*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
          main.c     8    /*                                                               */
          main.c     9    /*****************************************************************/
          main.c    10    #include "fxlib.h"
          main.c    11    
          main.c    12    
          main.c    13    //****************************************************************************
          main.c    14    //  AddIn_main (Sample program main function)
          main.c    15    //
          main.c    16    //  param   :   isAppli   : 1 = This application is launched by MAIN MENU.
          main.c    17    //                        : 0 = This application is launched by a strip in eACT application.
          main.c    18    //
          main.c    19    //              OptionNum : Strip number (0~3)
          main.c    20    //                         (This parameter is only used when isAppli parameter is 0.)
          main.c    21    //
          main.c    22    //  retval  :   1 = No error / 0 = Error
          main.c    23    //
          main.c    24    //****************************************************************************
          main.c    25    
          main.c    26    void drawShape(int x, int y, int shape[6][6]){
P   00000000              _drawShape:                      ; function: drawShape
                                                           ; frame size=28
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 ED06                   MOV         #6,R13
    00000008 2FB6                   MOV.L       R11,@-R15
          main.c    27        for (y=0; y<6; y++){
    0000000A EB00                   MOV         #0,R11
    0000000C 2FA6                   MOV.L       R10,@-R15
    0000000E 6CB3                   MOV         R11,R12
    00000010 2F96                   MOV.L       R9,@-R15
    00000012 4F22                   STS.L       PR,@-R15
    00000014 D940                   MOV.L       L342+4,R9  ; _Bdisp_SetPoint_DD
    00000016 9A7D                   MOV.W       L342,R10   ; H'00A8
    00000018 3A6C                   ADD         R6,R10
    0000001A              L334:                             
          main.c    28            for (x=0; x<6; x++){  
    0000001A 6EB3                   MOV         R11,R14
    0000001C              L335:                             
          main.c    29                Bdisp_SetPoint_DD(x, y, shape[6][6]);
    0000001C 66A2                   MOV.L       @R10,R6
    0000001E 65C3                   MOV         R12,R5
    00000020 490B                   JSR         @R9
    00000022 64E3                   MOV         R14,R4
    00000024 7E01                   ADD         #1,R14
    00000026 3ED3                   CMP/GE      R13,R14
    00000028 8BF8                   BF          L335




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Sep-2024 16:59:07  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000002A 7C01                   ADD         #1,R12
    0000002C 3CD3                   CMP/GE      R13,R12
    0000002E 8BF4                   BF          L334
          main.c    30            }
          main.c    31        }
          main.c    32    }
    00000030 4F26                   LDS.L       @R15+,PR
    00000032 69F6                   MOV.L       @R15+,R9
    00000034 6AF6                   MOV.L       @R15+,R10
    00000036 6BF6                   MOV.L       @R15+,R11
    00000038 6CF6                   MOV.L       @R15+,R12
    0000003A 6DF6                   MOV.L       @R15+,R13
    0000003C 000B                   RTS
    0000003E 6EF6                   MOV.L       @R15+,R14
          main.c    33    
          main.c    34    
          main.c    35    void minicross(xOffset, yOffset){
    00000040              _minicross:                      ; function: minicross
                                                           ; frame size=40
    00000040 2FE6                   MOV.L       R14,@-R15
    00000042 6353                   MOV         R5,R3
    00000044 2FD6                   MOV.L       R13,@-R15
    00000046 6E43                   MOV         R4,R14
    00000048 2FC6                   MOV.L       R12,@-R15
    0000004A 6D53                   MOV         R5,R13
    0000004C 2FB6                   MOV.L       R11,@-R15
    0000004E 7E06                   ADD         #6,R14
    00000050 DC32                   MOV.L       L342+8,R12 ; _Bdisp_DrawLineVRAM
    00000052 7311                   ADD         #17,R3
    00000054 2FA6                   MOV.L       R10,@-R15
          main.c    36        int i;
          main.c    37        for (i=6; i<18; i+=6){
    00000056 EB06                   MOV         #6,R11
    00000058 2F96                   MOV.L       R9,@-R15
    0000005A 6A53                   MOV         R5,R10
    0000005C 2F86                   MOV.L       R8,@-R15
    0000005E 6943                   MOV         R4,R9
    00000060 4F22                   STS.L       PR,@-R15
    00000062 7D06                   ADD         #6,R13
    00000064 7FF8                   ADD         #-8,R15
    00000066 E812                   MOV         #18,R8
    00000068 1F31                   MOV.L       R3,@(4,R15)
    0000006A 6293                   MOV         R9,R2
    0000006C 7211                   ADD         #17,R2
    0000006E 2F22                   MOV.L       R2,@R15
    00000070              L336:                             
          main.c    38        Bdisp_DrawLineVRAM(i+xOffset, 1+yOffset, i+xOffset, 17+yOffset); //vertikal
    00000070 57F1                   MOV.L       @(4,R15),R7
    00000072 66E3                   MOV         R14,R6
    00000074 65A3                   MOV         R10,R5
    00000076 7501                   ADD         #1,R5
    00000078 4C0B                   JSR         @R12
    0000007A 64E3                   MOV         R14,R4
          main.c    39        Bdisp_DrawLineVRAM(1+xOffset, i+yOffset, 17+xOffset, i+yOffset); //horizontal
    0000007C 66F2                   MOV.L       @R15,R6
    0000007E 65D3                   MOV         R13,R5
    00000080 67D3                   MOV         R13,R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Sep-2024 16:59:07  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000082 6493                   MOV         R9,R4
    00000084 4C0B                   JSR         @R12
    00000086 7401                   ADD         #1,R4
    00000088 7B06                   ADD         #6,R11
    0000008A 7D06                   ADD         #6,R13
    0000008C 3B83                   CMP/GE      R8,R11
    0000008E 8FEF                   BF/S        L336
    00000090 7E06                   ADD         #6,R14
          main.c    40        }
          main.c    41    }
    00000092 7F08                   ADD         #8,R15
    00000094 4F26                   LDS.L       @R15+,PR
    00000096 68F6                   MOV.L       @R15+,R8
    00000098 69F6                   MOV.L       @R15+,R9
    0000009A 6AF6                   MOV.L       @R15+,R10
    0000009C 6BF6                   MOV.L       @R15+,R11
    0000009E 6CF6                   MOV.L       @R15+,R12
    000000A0 6DF6                   MOV.L       @R15+,R13
    000000A2 000B                   RTS
    000000A4 6EF6                   MOV.L       @R15+,R14
          main.c    42    
          main.c    43    void initDisp(){
    000000A6              _initDisp:                       ; function: initDisp
                                                           ; frame size=32
    000000A6 2FE6                   MOV.L       R14,@-R15
    000000A8 2FD6                   MOV.L       R13,@-R15
          main.c    44        int i;
          main.c    45        int x;
          main.c    46        int y;
          main.c    47    
          main.c    48        for (i=21; i<60; i+=20){
    000000AA EE15                   MOV         #21,R14
    000000AC 2FC6                   MOV.L       R12,@-R15
    000000AE EC3C                   MOV         #60,R12
    000000B0 DD1A                   MOV.L       L342+8,R13 ; _Bdisp_DrawLineVRAM
    000000B2 2FB6                   MOV.L       R11,@-R15
    000000B4 2FA6                   MOV.L       R10,@-R15
    000000B6 2F96                   MOV.L       R9,@-R15
    000000B8 2F86                   MOV.L       R8,@-R15
    000000BA 4F22                   STS.L       PR,@-R15
    000000BC              L337:                             
          main.c    49            Bdisp_DrawLineVRAM(i, 2, i, 60); //vertikal
    000000BC E73C                   MOV         #60,R7
    000000BE 66E3                   MOV         R14,R6
    000000C0 E502                   MOV         #2,R5
    000000C2 4D0B                   JSR         @R13
    000000C4 64E3                   MOV         R14,R4
          main.c    50            Bdisp_DrawLineVRAM(2, i, 60, i); //horizontal
    000000C6 67E3                   MOV         R14,R7
    000000C8 E63C                   MOV         #60,R6
    000000CA 65E3                   MOV         R14,R5
    000000CC 4D0B                   JSR         @R13
    000000CE E402                   MOV         #2,R4
    000000D0 7E14                   ADD         #20,R14
    000000D2 3EC3                   CMP/GE      R12,R14
    000000D4 8BF2                   BF          L337
          main.c    51        }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Sep-2024 16:59:07  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          main.c    52        
          main.c    53        for (y=0; y<3; y++){
    000000D6 E802                   MOV         #2,R8
    000000D8 EA00                   MOV         #0,R10
    000000DA ED03                   MOV         #3,R13
    000000DC 6BA3                   MOV         R10,R11
    000000DE              L338:                             
          main.c    54            for (x=0; x<3; x++){
    000000DE 6CA3                   MOV         R10,R12
    000000E0 6E83                   MOV         R8,R14
    000000E2 69B3                   MOV         R11,R9
    000000E4 63B3                   MOV         R11,R3
    000000E6 4908                   SHLL2       R9
    000000E8 393C                   ADD         R3,R9
    000000EA 4908                   SHLL2       R9
    000000EC 7902                   ADD         #2,R9
    000000EE              L339:                             
          main.c    55                minicross(x*20+2, y*20+2);
    000000EE 6593                   MOV         R9,R5
    000000F0 BFA6                   BSR         _minicross
    000000F2 64E3                   MOV         R14,R4
    000000F4 7C01                   ADD         #1,R12
    000000F6 3CD3                   CMP/GE      R13,R12
    000000F8 8FF9                   BF/S        L339
    000000FA 7E14                   ADD         #20,R14
    000000FC 7B01                   ADD         #1,R11
    000000FE 3BD3                   CMP/GE      R13,R11
    00000100 8BED                   BF          L338
          main.c    56            }
          main.c    57        }
          main.c    58    }
    00000102 4F26                   LDS.L       @R15+,PR
    00000104 68F6                   MOV.L       @R15+,R8
    00000106 69F6                   MOV.L       @R15+,R9
    00000108 6AF6                   MOV.L       @R15+,R10
    0000010A 6BF6                   MOV.L       @R15+,R11
    0000010C 6CF6                   MOV.L       @R15+,R12
    0000010E 6DF6                   MOV.L       @R15+,R13
    00000110 000B                   RTS
    00000112 6EF6                   MOV.L       @R15+,R14
    00000114              L342:                             
    00000114 00A8                   .DATA.W     H'00A8
    00000116 0000                   .DATA.W     0
    00000118 <00000000>             .DATA.L     _Bdisp_SetPoint_DD
    0000011C <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
          main.c    59    
          main.c    60    int AddIn_main(int isAppli, unsigned short OptionNum)
    00000120              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=296
                                                           ; used runtime library name:
                                                           ; __quick_mvn
    00000120 4F22                   STS.L       PR,@-R15
    00000122 9027                   MOV.W       L343,R0    ; H'FEDC
          main.c    61    {
          main.c    62        
          main.c    63    
          main.c    64    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Sep-2024 16:59:07  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          main.c    65        
          main.c    66        
          main.c    67        int cross[6][6] = {    
          main.c    68            {1, 0, 0, 0, 0, 1},
          main.c    69            {0, 1, 0, 0, 1, 0},
          main.c    70            {0, 0, 1, 1, 0, 0},
          main.c    71            {0, 0, 1, 1, 0, 0},
          main.c    72            {0, 1, 0, 0, 1, 0},
          main.c    73            {1, 0, 0, 0, 0, 1}
          main.c    74        };
    00000124 9127                   MOV.W       L343+2,R1  ; H'0094
    00000126 3F0C                   ADD         R0,R15
    00000128 D214                   MOV.L       L343+8,R2  ; L323
    0000012A 9025                   MOV.W       L343+4,R0  ; H'0090
    0000012C D314                   MOV.L       L343+12,R3 ; __quick_mvn
    0000012E 430B                   JSR         @R3
    00000130 31FC                   ADD         R15,R1
          main.c    75        
          main.c    76        int circle[6][6] = { 
          main.c    77            {0, 0, 1, 1, 0, 0},
          main.c    78            {0, 1, 0, 0, 1, 0},
          main.c    79            {1, 0, 0, 0, 0, 1},
          main.c    80            {1, 0, 0, 0, 0, 1},
          main.c    81            {0, 1, 0, 0, 1, 0},
          main.c    82            {0, 0, 1, 1, 0, 0}
          main.c    83        };
    00000132 61F3                   MOV         R15,R1
    00000134 D213                   MOV.L       L343+16,R2 ; L325
    00000136 901F                   MOV.W       L343+4,R0  ; H'0090
    00000138 D311                   MOV.L       L343+12,R3 ; __quick_mvn
    0000013A 430B                   JSR         @R3
    0000013C 7104                   ADD         #4,R1
          main.c    84        
          main.c    85        
          main.c    86            
          main.c    87        unsigned int key;
          main.c    88    
          main.c    89        Bdisp_AllClr_DDVRAM();
    0000013E D112                   MOV.L       L343+20,R1 ; _Bdisp_AllClr_DDVRAM
    00000140 410B                   JSR         @R1
    00000142 0009                   NOP
          main.c    90        initDisp();
    00000144 BFAF                   BSR         _initDisp
    00000146 0009                   NOP
          main.c    91        
          main.c    92        
          main.c    93        Bdisp_PutDisp_DD();
    00000148 D110                   MOV.L       L343+24,R1 ; _Bdisp_PutDisp_DD
    0000014A 410B                   JSR         @R1
    0000014C 0009                   NOP
          main.c    94        GetKey(&key);
    0000014E D310                   MOV.L       L343+28,R3 ; _GetKey
    00000150 430B                   JSR         @R3
    00000152 64F3                   MOV         R15,R4
          main.c    95        
          main.c    96        
          main.c    97        drawShape(5, 5, cross);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Sep-2024 16:59:07  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000154 960F                   MOV.W       L343+2,R6  ; H'0094
    00000156 E505                   MOV         #5,R5
    00000158 36FC                   ADD         R15,R6
    0000015A BF51                   BSR         _drawShape
    0000015C 6453                   MOV         R5,R4
          main.c    98       
          main.c    99        Bdisp_PutDisp_DD();
    0000015E D30B                   MOV.L       L343+24,R3 ; _Bdisp_PutDisp_DD
    00000160 430B                   JSR         @R3
    00000162 0009                   NOP
          main.c   100        GetKey(&key);
    00000164 D20A                   MOV.L       L343+28,R2 ; _GetKey
    00000166 420B                   JSR         @R2
    00000168 64F3                   MOV         R15,R4
          main.c   101        
          main.c   102        return 1;
          main.c   103    }
    0000016A 9106                   MOV.W       L343+6,R1  ; H'0124
    0000016C 3F1C                   ADD         R1,R15
    0000016E 4F26                   LDS.L       @R15+,PR
    00000170 000B                   RTS
    00000172 E001                   MOV         #1,R0
    00000174              L343:                             
    00000174 FEDC                   .DATA.W     H'FEDC
    00000176 0094                   .DATA.W     H'0094
    00000178 0090                   .DATA.W     H'0090
    0000017A 0124                   .DATA.W     H'0124
    0000017C <00000000>             .DATA.L     L323
    00000180 <00000000>             .DATA.L     __quick_mvn
    00000184 <00000000>             .DATA.L     L325
    00000188 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    0000018C <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00000190 <00000000>             .DATA.L     _GetKey
          main.c   104    
          main.c   105    
          main.c   106    
          main.c   107    
          main.c   108    //****************************************************************************
          main.c   109    //**************                                              ****************
          main.c   110    //**************                 Notice!                      ****************
          main.c   111    //**************                                              ****************
          main.c   112    //**************  Please do not change the following source.  ****************
          main.c   113    //**************                                              ****************
          main.c   114    //****************************************************************************
          main.c   115    
          main.c   116    
          main.c   117    #pragma section _BR_Size
          main.c   118    unsigned long BR_Size;
          main.c   119    #pragma section
          main.c   120    
          main.c   121    
          main.c   122    #pragma section _TOP
          main.c   123    
          main.c   124    //****************************************************************************
          main.c   125    //  InitializeSystem
          main.c   126    //
          main.c   127    //  param   :   isAppli   : 1 = Application / 0 = eActivity




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Sep-2024 16:59:07  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          main.c   128    //              OptionNum : Option Number (only eActivity)
          main.c   129    //
          main.c   130    //  retval  :   1 = No error / 0 = Error
          main.c   131    //
          main.c   132    //****************************************************************************
          main.c   133    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
          main.c   134    {
          main.c   135        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L344+2,R3  ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L344:                             
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
          main.c   136    }
          main.c   137    
          main.c   138    #pragma section
          main.c   139    
C   00000000              L323:
    00000000 0000000100             .DATA.L     H'00000001,H'00000000,H'00000000,H'00000000,H'00000000,H'00000001,H'00000000,
             0000000000 +                       H'00000001,H'00000000,H'00000000,H'00000001,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000001,H'00000001,H'00000000,H'00000000,H'00000000,H'00000000,H'00000001,
             0000000000 +                       H'00000001,H'00000000,H'00000000,H'00000000,H'00000001,H'00000000,H'00000000,
             0000000100 +                       H'00000001,H'00000000,H'00000001,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000001
             0001000000   
             0000000000   
             0000000100   
             0000000000   
             0000000000   
             0000000001   
             0000000100   
             0000000000   
             0000000000   
             0000000000   
             0000000100   
             0000010000   
             0000000000   
             0000000000   
             0000000100   
             0000000000   
             0000000000   
             0100000000   
             0000000100   
             0000000000   
             0000000000   
             0000000000   
             00000001     
    00000090              L325:
    00000090 0000000000             .DATA.L     H'00000000,H'00000000,H'00000001,H'00000001,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000001,H'00000000,H'00000000,H'00000001,H'00000000,H'00000001,H'00000000,
             0001000000 +                       H'00000000,H'00000000,H'00000000,H'00000001,H'00000001,H'00000000,H'00000000,
             0100000000 +                       H'00000000,H'00000000,H'00000001,H'00000000,H'00000001,H'00000000,H'00000000,
             0000000000 +                       H'00000001,H'00000000,H'00000000,H'00000000,H'00000001,H'00000001,H'00000000,
             0000000000 +                       H'00000000




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Sep-2024 16:59:07  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0001000000   
             0000000000   
             0000000100   
             0000000000   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0001000000   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0100000000   
             0000000100   
             0000000000   
             0000000000   
             0100000000   
             0000000000   
             0000000000   
             0001000000   
             0100000000   
             00000000     
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1




































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Sep-2024 16:59:07  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      139



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000194 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               00000120 Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000002C4 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            7
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           6
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            24






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\Nutzer\AppData\Local\Temp\hmk6726.tmp 

