SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Sep-2024 17:25:25  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\Nutzer\OneDrive\Dokumente\GitHub\superTicTacToe\main.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          main.c     1    /*****************************************************************/
          main.c     2    /*                                                               */
          main.c     3    /*   CASIO fx-9860G SDK Library                                  */
          main.c     4    /*                                                               */
          main.c     5    /*   File name : [ProjectName].c                                 */
          main.c     6    /*                                                               */
          main.c     7    /*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
          main.c     8    /*                                                               */
          main.c     9    /*****************************************************************/
          main.c    10    #include "fxlib.h"
          main.c    11    
          main.c    12    
          main.c    13    //****************************************************************************
          main.c    14    //  AddIn_main (Sample program main function)
          main.c    15    //
          main.c    16    //  param   :   isAppli   : 1 = This application is launched by MAIN MENU.
          main.c    17    //                        : 0 = This application is launched by a strip in eACT application.
          main.c    18    //
          main.c    19    //              OptionNum : Strip number (0~3)
          main.c    20    //                         (This parameter is only used when isAppli parameter is 0.)
          main.c    21    //
          main.c    22    //  retval  :   1 = No error / 0 = Error
          main.c    23    //
          main.c    24    //****************************************************************************
          main.c    25    
          main.c    26    void drawShape(int xOffset, int yOffset, int shape[3][3]){
P   00000000              _drawShape:                      ; function: drawShape
                                                           ; frame size=44
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 2FB6                   MOV.L       R11,@-R15
    00000008 2FA6                   MOV.L       R10,@-R15
          main.c    27        int x;
          main.c    28        int y;
          main.c    29        
          main.c    30        for (y=0; y<3; y++){
    0000000A EB03                   MOV         #3,R11
    0000000C 2F96                   MOV.L       R9,@-R15
    0000000E E900                   MOV         #0,R9
    00000010 2F86                   MOV.L       R8,@-R15
    00000012 6C93                   MOV         R9,R12
    00000014 4F22                   STS.L       PR,@-R15
    00000016 7FF4                   ADD         #-12,R15
    00000018 1F41                   MOV.L       R4,@(4,R15)
    0000001A 1F52                   MOV.L       R5,@(8,R15)
    0000001C 2F62                   MOV.L       R6,@R15
    0000001E              L336:                             
          main.c    31            for (x=0; x<3; x++){  
    0000001E 6A93                   MOV         R9,R10
    00000020 5DF1                   MOV.L       @(4,R15),R13
    00000022 6EC3                   MOV         R12,R14
    00000024 62F2                   MOV.L       @R15,R2
    00000026 63C3                   MOV         R12,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Sep-2024 17:25:25  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000028 58F2                   MOV.L       @(8,R15),R8
    0000002A 4E00                   SHLL        R14
    0000002C 3E3C                   ADD         R3,R14
    0000002E 4E08                   SHLL2       R14
    00000030 3E2C                   ADD         R2,R14
    00000032 38CC                   ADD         R12,R8
    00000034              L337:                             
          main.c    32                Bdisp_SetPoint_VRAM(x+xOffset, y+yOffset, shape[y][x]);
    00000034 66E6                   MOV.L       @R14+,R6
    00000036 6583                   MOV         R8,R5
    00000038 D355                   MOV.L       L344+2,R3  ; _Bdisp_SetPoint_VRAM
    0000003A 430B                   JSR         @R3
    0000003C 64D3                   MOV         R13,R4
    0000003E 7A01                   ADD         #1,R10
    00000040 3AB3                   CMP/GE      R11,R10
    00000042 8FF7                   BF/S        L337
    00000044 7D01                   ADD         #1,R13
    00000046 7C01                   ADD         #1,R12
    00000048 3CB3                   CMP/GE      R11,R12
    0000004A 8BE8                   BF          L336
          main.c    33            }
          main.c    34        }
          main.c    35    }
    0000004C 7F0C                   ADD         #12,R15
    0000004E 4F26                   LDS.L       @R15+,PR
    00000050 68F6                   MOV.L       @R15+,R8
    00000052 69F6                   MOV.L       @R15+,R9
    00000054 6AF6                   MOV.L       @R15+,R10
    00000056 6BF6                   MOV.L       @R15+,R11
    00000058 6CF6                   MOV.L       @R15+,R12
    0000005A 6DF6                   MOV.L       @R15+,R13
    0000005C 000B                   RTS
    0000005E 6EF6                   MOV.L       @R15+,R14
          main.c    36    
          main.c    37    void minicross(xOffset, yOffset){
    00000060              _minicross:                      ; function: minicross
                                                           ; frame size=40
    00000060 2FE6                   MOV.L       R14,@-R15
    00000062 6353                   MOV         R5,R3
    00000064 2FD6                   MOV.L       R13,@-R15
    00000066 6E43                   MOV         R4,R14
    00000068 2FC6                   MOV.L       R12,@-R15
    0000006A 6D53                   MOV         R5,R13
    0000006C 2FB6                   MOV.L       R11,@-R15
    0000006E 7E06                   ADD         #6,R14
    00000070 DC48                   MOV.L       L344+6,R12 ; _Bdisp_DrawLineVRAM
    00000072 7311                   ADD         #17,R3
    00000074 2FA6                   MOV.L       R10,@-R15
          main.c    38        int i;
          main.c    39        for (i=6; i<18; i+=6){
    00000076 EB06                   MOV         #6,R11
    00000078 2F96                   MOV.L       R9,@-R15
    0000007A 6A53                   MOV         R5,R10
    0000007C 2F86                   MOV.L       R8,@-R15
    0000007E 6943                   MOV         R4,R9
    00000080 4F22                   STS.L       PR,@-R15
    00000082 7D06                   ADD         #6,R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Sep-2024 17:25:25  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000084 7FF8                   ADD         #-8,R15
    00000086 E812                   MOV         #18,R8
    00000088 1F31                   MOV.L       R3,@(4,R15)
    0000008A 6293                   MOV         R9,R2
    0000008C 7211                   ADD         #17,R2
    0000008E 2F22                   MOV.L       R2,@R15
    00000090              L338:                             
          main.c    40        Bdisp_DrawLineVRAM(i+xOffset, 1+yOffset, i+xOffset, 17+yOffset); //vertikal
    00000090 57F1                   MOV.L       @(4,R15),R7
    00000092 66E3                   MOV         R14,R6
    00000094 65A3                   MOV         R10,R5
    00000096 7501                   ADD         #1,R5
    00000098 4C0B                   JSR         @R12
    0000009A 64E3                   MOV         R14,R4
          main.c    41        Bdisp_DrawLineVRAM(1+xOffset, i+yOffset, 17+xOffset, i+yOffset); //horizontal
    0000009C 66F2                   MOV.L       @R15,R6
    0000009E 65D3                   MOV         R13,R5
    000000A0 67D3                   MOV         R13,R7
    000000A2 6493                   MOV         R9,R4
    000000A4 4C0B                   JSR         @R12
    000000A6 7401                   ADD         #1,R4
    000000A8 7B06                   ADD         #6,R11
    000000AA 7D06                   ADD         #6,R13
    000000AC 3B83                   CMP/GE      R8,R11
    000000AE 8FEF                   BF/S        L338
    000000B0 7E06                   ADD         #6,R14
          main.c    42        }
          main.c    43    }
    000000B2 7F08                   ADD         #8,R15
    000000B4 4F26                   LDS.L       @R15+,PR
    000000B6 68F6                   MOV.L       @R15+,R8
    000000B8 69F6                   MOV.L       @R15+,R9
    000000BA 6AF6                   MOV.L       @R15+,R10
    000000BC 6BF6                   MOV.L       @R15+,R11
    000000BE 6CF6                   MOV.L       @R15+,R12
    000000C0 6DF6                   MOV.L       @R15+,R13
    000000C2 000B                   RTS
    000000C4 6EF6                   MOV.L       @R15+,R14
          main.c    44    
          main.c    45    void initDisp(){
    000000C6              _initDisp:                       ; function: initDisp
                                                           ; frame size=32
    000000C6 2FE6                   MOV.L       R14,@-R15
    000000C8 2FD6                   MOV.L       R13,@-R15
          main.c    46        int i;
          main.c    47        int x;
          main.c    48        int y;
          main.c    49    
          main.c    50        for (i=21; i<60; i+=20){
    000000CA EE15                   MOV         #21,R14
    000000CC 2FC6                   MOV.L       R12,@-R15
    000000CE EC3C                   MOV         #60,R12
    000000D0 DD30                   MOV.L       L344+6,R13 ; _Bdisp_DrawLineVRAM
    000000D2 2FB6                   MOV.L       R11,@-R15
    000000D4 2FA6                   MOV.L       R10,@-R15
    000000D6 2F96                   MOV.L       R9,@-R15
    000000D8 2F86                   MOV.L       R8,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Sep-2024 17:25:25  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000DA 4F22                   STS.L       PR,@-R15
    000000DC              L339:                             
          main.c    51            Bdisp_DrawLineVRAM(i, 2, i, 60); //vertikal
    000000DC E73C                   MOV         #60,R7
    000000DE 66E3                   MOV         R14,R6
    000000E0 E502                   MOV         #2,R5
    000000E2 4D0B                   JSR         @R13
    000000E4 64E3                   MOV         R14,R4
          main.c    52            Bdisp_DrawLineVRAM(2, i, 60, i); //horizontal
    000000E6 67E3                   MOV         R14,R7
    000000E8 E63C                   MOV         #60,R6
    000000EA 65E3                   MOV         R14,R5
    000000EC 4D0B                   JSR         @R13
    000000EE E402                   MOV         #2,R4
    000000F0 7E14                   ADD         #20,R14
    000000F2 3EC3                   CMP/GE      R12,R14
    000000F4 8BF2                   BF          L339
          main.c    53        }
          main.c    54        
          main.c    55        for (y=0; y<3; y++){
    000000F6 E802                   MOV         #2,R8
    000000F8 EA00                   MOV         #0,R10
    000000FA ED03                   MOV         #3,R13
    000000FC 6BA3                   MOV         R10,R11
    000000FE              L340:                             
          main.c    56            for (x=0; x<3; x++){
    000000FE 6CA3                   MOV         R10,R12
    00000100 6E83                   MOV         R8,R14
    00000102 69B3                   MOV         R11,R9
    00000104 63B3                   MOV         R11,R3
    00000106 4908                   SHLL2       R9
    00000108 393C                   ADD         R3,R9
    0000010A 4908                   SHLL2       R9
    0000010C 7902                   ADD         #2,R9
    0000010E              L341:                             
          main.c    57                minicross(x*20+2, y*20+2);
    0000010E 6593                   MOV         R9,R5
    00000110 BFA6                   BSR         _minicross
    00000112 64E3                   MOV         R14,R4
    00000114 7C01                   ADD         #1,R12
    00000116 3CD3                   CMP/GE      R13,R12
    00000118 8FF9                   BF/S        L341
    0000011A 7E14                   ADD         #20,R14
    0000011C 7B01                   ADD         #1,R11
    0000011E 3BD3                   CMP/GE      R13,R11
    00000120 8BED                   BF          L340
          main.c    58            }
          main.c    59        }
          main.c    60    }
    00000122 4F26                   LDS.L       @R15+,PR
    00000124 68F6                   MOV.L       @R15+,R8
    00000126 69F6                   MOV.L       @R15+,R9
    00000128 6AF6                   MOV.L       @R15+,R10
    0000012A 6BF6                   MOV.L       @R15+,R11
    0000012C 6CF6                   MOV.L       @R15+,R12
    0000012E 6DF6                   MOV.L       @R15+,R13
    00000130 000B                   RTS




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Sep-2024 17:25:25  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000132 6EF6                   MOV.L       @R15+,R14
          main.c    61    
          main.c    62    int AddIn_main(int isAppli, unsigned short OptionNum)
    00000134              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=80
                                                           ; used runtime library name:
                                                           ; __quick_odd_mvn
    00000134 4F22                   STS.L       PR,@-R15
    00000136 7FB4                   ADD         #-76,R15
          main.c    63    {
          main.c    64        
          main.c    65        int circle[3][3] = {    
          main.c    66            {1, 1, 1},
          main.c    67            {1, 0, 1},
          main.c    68            {1, 1, 1},
          main.c    69            
          main.c    70            
          main.c    71        };
    00000138 D217                   MOV.L       L344+10,R2 ; L325
    0000013A 61F3                   MOV         R15,R1
    0000013C D317                   MOV.L       L344+14,R3 ; __quick_odd_mvn
    0000013E 7128                   ADD         #40,R1
    00000140 430B                   JSR         @R3
    00000142 E024                   MOV         #36,R0
          main.c    72        
          main.c    73        int cross[3][3] = { 
          main.c    74            {1, 0, 1},
          main.c    75            {0, 1, 0},
          main.c    76            {1, 0, 1},
          main.c    77            
          main.c    78           
          main.c    79        };  
    00000144 D216                   MOV.L       L344+18,R2 ; L327
    00000146 61F3                   MOV         R15,R1
    00000148 D314                   MOV.L       L344+14,R3 ; __quick_odd_mvn
    0000014A 7104                   ADD         #4,R1
    0000014C 430B                   JSR         @R3
    0000014E E024                   MOV         #36,R0
          main.c    80            
          main.c    81        unsigned int key;
          main.c    82    
          main.c    83        Bdisp_AllClr_DDVRAM();
    00000150 D114                   MOV.L       L344+22,R1 ; _Bdisp_AllClr_DDVRAM
    00000152 410B                   JSR         @R1
    00000154 0009                   NOP
          main.c    84        initDisp();
    00000156 BFB6                   BSR         _initDisp
    00000158 0009                   NOP
          main.c    85        
          main.c    86        Bdisp_PutDisp_DD();
    0000015A D113                   MOV.L       L344+26,R1 ; _Bdisp_PutDisp_DD
    0000015C 410B                   JSR         @R1
    0000015E 0009                   NOP
          main.c    87        GetKey(&key);
    00000160 D312                   MOV.L       L344+30,R3 ; _GetKey
    00000162 430B                   JSR         @R3
    00000164 64F3                   MOV         R15,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Sep-2024 17:25:25  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          main.c    88        
          main.c    89        drawShape(4, 4, cross); //test
    00000166 66F3                   MOV         R15,R6
    00000168 7604                   ADD         #4,R6
    0000016A E504                   MOV         #4,R5
    0000016C BF48                   BSR         _drawShape
    0000016E 6453                   MOV         R5,R4
          main.c    90        drawShape(10, 4, circle);
    00000170 66F3                   MOV         R15,R6
    00000172 7628                   ADD         #40,R6
    00000174 E504                   MOV         #4,R5
    00000176 BF43                   BSR         _drawShape
    00000178 E40A                   MOV         #10,R4
          main.c    91        
          main.c    92        Bdisp_PutDisp_DD();
    0000017A D20B                   MOV.L       L344+26,R2 ; _Bdisp_PutDisp_DD
    0000017C 420B                   JSR         @R2
    0000017E 0009                   NOP
          main.c    93        GetKey(&key);
    00000180 D30A                   MOV.L       L344+30,R3 ; _GetKey
    00000182 430B                   JSR         @R3
    00000184 64F3                   MOV         R15,R4
          main.c    94        
          main.c    95        return 1;
          main.c    96    }
    00000186 7F4C                   ADD         #76,R15
    00000188 4F26                   LDS.L       @R15+,PR
    0000018A 000B                   RTS
    0000018C E001                   MOV         #1,R0
    0000018E              L344:                             
    0000018E 0000                   .DATA.W     0
    00000190 <00000000>             .DATA.L     _Bdisp_SetPoint_VRAM
    00000194 <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
    00000198 <00000000>             .DATA.L     L325
    0000019C <00000000>             .DATA.L     __quick_odd_mvn
    000001A0 <00000000>             .DATA.L     L327
    000001A4 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000001A8 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000001AC <00000000>             .DATA.L     _GetKey
          main.c    97    
          main.c    98    
          main.c    99    
          main.c   100    
          main.c   101    //****************************************************************************
          main.c   102    //**************                                              ****************
          main.c   103    //**************                 Notice!                      ****************
          main.c   104    //**************                                              ****************
          main.c   105    //**************  Please do not change the following source.  ****************
          main.c   106    //**************                                              ****************
          main.c   107    //****************************************************************************
          main.c   108    
          main.c   109    
          main.c   110    #pragma section _BR_Size
          main.c   111    unsigned long BR_Size;
          main.c   112    #pragma section
          main.c   113    
          main.c   114    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Sep-2024 17:25:25  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          main.c   115    #pragma section _TOP
          main.c   116    
          main.c   117    //****************************************************************************
          main.c   118    //  InitializeSystem
          main.c   119    //
          main.c   120    //  param   :   isAppli   : 1 = Application / 0 = eActivity
          main.c   121    //              OptionNum : Option Number (only eActivity)
          main.c   122    //
          main.c   123    //  retval  :   1 = No error / 0 = Error
          main.c   124    //
          main.c   125    //****************************************************************************
          main.c   126    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
          main.c   127    {
          main.c   128        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L345+2,R3  ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L345:                             
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
          main.c   129    }
          main.c   130    
          main.c   131    #pragma section
          main.c   132    
C   00000000              L325:
    00000000 0000000100             .DATA.L     H'00000001,H'00000001,H'00000001,H'00000001,H'00000000,H'00000001,H'00000001,
             0000010000 +                       H'00000001,H'00000001
             0001000000   
             0100000000   
             0000000100   
             0000010000   
             0001000000   
             01           
    00000024              L327:
    00000024 0000000100             .DATA.L     H'00000001,H'00000000,H'00000001,H'00000000,H'00000001,H'00000000,H'00000001,
             0000000000 +                       H'00000000,H'00000001
             0001000000   
             0000000001   
             0000000000   
             0000010000   
             0000000000   
             01           
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1















SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 11-Sep-2024 17:25:25  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      132



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000001B0 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               00000048 Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000208 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            7
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           6
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            23






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\Nutzer\AppData\Local\Temp\hmk7C5F.tmp 

